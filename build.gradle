/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'eclipse'
    id 'org.springframework.boot' version '2.7.8'
    id 'io.spring.dependency-management' version '1.1.0'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'

    implementation 'org.springframework.boot:spring-boot-starter-web:2.7.8'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.7.8'
    implementation 'org.springframework.boot:spring-boot-starter-artemis:2.7.8'
	implementation 'com.oracle.database.jdbc:ojdbc8:21.8.0.0'
	implementation 'org.messaginghub:pooled-jms:2.0.4'
}

def springProfile = null 
if (project.hasProperty('2pc')) {
	springProfile = '2pc'
	dependencies {
		implementation 'me.snowdrop:narayana-spring-boot-starter:2.6.0'
	}
} else {
	springProfile = 'non-2pc'
	dependencies {
		compileOnly 'me.snowdrop:narayana-spring-boot-starter:2.6.0'
	}
}

bootRun {
	systemProperty 'spring.profiles.active', springProfile
}

application {
    // Define the main class for the application.
    mainClass = 'br.com.fnbrandao.artigo_2pc.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
